(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(6),o=(n(0),n(97)),i={id:"collection",title:"Extracting FBTs",sidebar_label:"Extracting translatable texts"},c={unversionedId:"collection",id:"collection",isDocsHomePage:!1,title:"Extracting FBTs",description:"We provide",source:"@site/../docs/collection.md",slug:"/collection",permalink:"/fbt/docs/collection",version:"current",lastUpdatedBy:"David",lastUpdatedAt:1634169990,sidebar_label:"Extracting translatable texts",sidebar:"docs",previous:{title:"JS Transforms (Transpilation)",permalink:"/fbt/docs/transform"},next:{title:"Translating",permalink:"/fbt/docs/translating"}},l=[{value:"A note on hashes",id:"a-note-on-hashes",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"We provide"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/facebook/fbt/blob/main/packages/babel-plugin-fbt/src/bin/collectFbt.js"}),Object(o.b)("inlineCode",{parentName:"a"},"collectFbt.js")),"\nas a utility for collecting strings.  It expects a JSON input of:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"{\n  <enumManifestPath>: [\n    <path1>, <path2>, ..., <pathN>\n  ]\n}\n")),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"em"},"collectFbt.js")," is also exposed as a binary named ",Object(o.b)("inlineCode",{parentName:"em"},"fbt-collect")," from ",Object(o.b)("inlineCode",{parentName:"em"},"babel-plugin-fbt"))),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"enumManifestPath")," doesn't need to point to a valid enum manifest, but if you use a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"enums#shared-enums"}),"shared enum")," it's required."),Object(o.b)("p",null,"The enum-manifest should be a ",Object(o.b)("inlineCode",{parentName:"p"},'"JSON.parseable"')," mapping from all known enums in your app to the key/value pairs they respectively represent:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n "EnumA": {\n    "keyA1": "valA1",\n    ...,\n    "keyAN": "valAN"\n  },\n  ...,\n "EnumX": {\n    "keyX1": "valX1",\n    ...,\n    "keyXM": "valXM"\n  },\n}\n')),Object(o.b)("p",null,"We've provided ",Object(o.b)("inlineCode",{parentName:"p"},"manifest.js")," as an easy way to generate this manifest from a given source tree.\n",Object(o.b)("em",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"em"},"manifest.js")," is also exposed as a binary named ",Object(o.b)("inlineCode",{parentName:"em"},"fbt-manifest")," from ",Object(o.b)("inlineCode",{parentName:"em"},"babel-plugin-fbt"))),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"collectFbt.js")," will output a JSON object in the following format:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "phrases": [\n    {\n      "hashToLeaf": {\n        <hash>: {\n          "text": <text>,\n          "desc": <description>,\n        },\n        ...\n      },\n      "line_beg": <beginning_line>,\n      "col_beg": <beginning_col>,\n      "line_end": <end_line>,\n      "col_end": <col_end>,\n      "type": "text"|"table",\n      "project": <project>,\n      "jsfbt": string|{t: <table>, m: <metadata>},\n    }\n  ],\n  childParentMapping: {\n    <childIdx>: <parentIdx>\n  }\n}\n')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"phrases")," here represents all the ",Object(o.b)("em",{parentName:"p"},"source")," information we need to\nprocess and produce an ",Object(o.b)("inlineCode",{parentName:"p"},"fbt._(...)")," callsite's final payload.  When\ncombined with corresponding translations to each ",Object(o.b)("inlineCode",{parentName:"p"},"hashToLeaf")," entry we\ncan produce the translated payloads ",Object(o.b)("inlineCode",{parentName:"p"},"fbt._()")," expects."),Object(o.b)("p",null,"When it comes to moving from source text to translations, what is most\npertinent is the ",Object(o.b)("inlineCode",{parentName:"p"},"hashToLeaf")," payload containing all relevant texts\nwith their identifying hash.  You can provide a custom hash module to\n",Object(o.b)("inlineCode",{parentName:"p"},"collectFbts")," if you so choose.  It defaults to md5."),Object(o.b)("h3",{id:"a-note-on-hashes"},"A note on hashes"),Object(o.b)("p",null,"In the FBT framework, there are 2 main places we uses hashes for\nidentification: ",Object(o.b)("strong",{parentName:"p"},"text")," and ",Object(o.b)("strong",{parentName:"p"},"fbt callsite"),".  The ",Object(o.b)("inlineCode",{parentName:"p"},"hashToLeaf")," mapping\nabove represents the hash (using whichever algorithm was chosen in\n",Object(o.b)("inlineCode",{parentName:"p"},"collectFbt"),") of the ",Object(o.b)("strong",{parentName:"p"},"text")," and its ",Object(o.b)("strong",{parentName:"p"},"description"),".  This is used\nwhen ",Object(o.b)("em",{parentName:"p"},"building")," the translated payloads."),Object(o.b)("p",null,"The hash of the callsite (defaulting to ",Object(o.b)("inlineCode",{parentName:"p"},"jenkins")," hash) is used to\nlook up the payload in\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/facebook/fbt/blob/main/runtime/nonfb/FbtTranslations.js"}),Object(o.b)("inlineCode",{parentName:"a"},"FbtTranslations")),".\nThis is basically the hash of the object you see in ",Object(o.b)("inlineCode",{parentName:"p"},"jsfbt"),"."),Object(o.b)("p",null,"See ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"translating"}),"Translating FBTs")," for getting your translations in\nthe right format."))}b.isMDXComponent=!0},97:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,d=p["".concat(i,".").concat(u)]||p[u]||m[u]||o;return n?r.a.createElement(d,c(c({ref:t},s),{},{components:n})):r.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);